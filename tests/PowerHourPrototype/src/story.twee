:: StoryTitle
Power Hour Prototype

:: StoryData
{
  "ifid": "E8C1C441-6E7A-4398-B6FD-CE87EDB5A05A",
  "format": "SugarCube",
  "format-version": "2.37.3",
  "start": "PowerHourStart",
  "zoom": 1
}

:: PowerHourStart {"position":"825,350","size":"100,100"}
<<if !State.variables.pph>> 
  <<run setup.initPowerHour()>>
<</if>>
<<run setTimeout(() => Engine.play("PowerHourLoop"), 0)>>


:: PowerHourLoop {"position":"700,475","size":"100,100"}
<<nobr>>
<<run setup.ensureFullFeed()>>
<<set _pph = State.variables.pph>>

<<if _pph.errorMessage>>
  <div class="modal-overlay">
    <div class="modal-wrapper">
      <div class="modal-card" id="modal">
        <p><<print _pph.errorMessage>></p>
        <<button "OK">>
          <<run (() => {
            const m = document.getElementById("modal");
            m.classList.add("exit");
            m.addEventListener("animationend", () => {
              State.variables.pph.errorMessage = null;
              Engine.play("PowerHourLoop");
            });
          })()>>
        <</button>>
      </div>
    </div>
  </div>

<<elseif _pph.lastEvent>>
  <div class="modal-overlay">
    <div class="modal-wrapper">
      <div class="modal-card" id="modal">
        <p><<print _pph.lastEvent>></p>
        <<button "OK">>
          <<run (() => {
            const m = document.getElementById("modal");
            m.classList.add("exit");
            m.addEventListener("animationend", () => {
              State.variables.pph.lastEvent = null;
              Engine.play("PowerHourLoop");
            });
          })()>>
        <</button>>
      </div>
    </div>
  </div>
<<else>>

  <!-- Your normal UI below: status, progress, feed columns… -->
    <div id="dashboard">
    <div id="status">
      <div>Burnout: <<print "▓".repeat(_pph.burnout) + "░".repeat(10 - _pph.burnout)>> <<print _pph.burnout>>/10</div>
      <div>Actions Left: <<print _pph.actionsLeft>></div>
    </div>
    <div id="progress">
      Initiative Progress<br>
      <<if Object.keys(_pph.activeTracks).length>>
        <<for _track,_step range _pph.activeTracks>>
          <<set _bar  = "■".repeat(_step) + "□".repeat(5 - _step)>>
          <<set _name = _track.padEnd(28, " ")>>
          • <<print _name>> [<<print _bar>>] <<print _step>>/5<<if _track === _pph.pledgedTrack>> ⬤<</if>><br>
        <</for>>
      <<else>>
        <p>None started yet. Please remember that the Power Hour has begun.</p>
      <</if>>
    </div>
  </div>


<div id="feed">
<!--CARD 1-->
<div class="retro-window" data-index="0">
  <<set _card = State.variables.pph.taskFeed[0]>>

  <div class="window-header">
    <span class="window-title">Task Ticket</span>
    <button class="close-button">✕</button>
  </div>

  <div class="window-body">
    <div class="card-meta">
      <<print _card.track + " – Step " + _card.step>>
    </div>

    <<if _card.title>>
      <div class="card-title"><<print _card.title>></div>
    <</if>>

    <<if _card.description>>
      <div class="card-desc"><<print _card.description>></div>
    <</if>>

    <<if _card.type === "pledge">>
      <em class="pledge-label">Visibility Pledge</em>
    <</if>>

    <div class="actions">
      <<if _card.type === "pledge">>
        <button onclick="setup.animatePledge(0)">Pledge</button>
      <<else>>
        <button onclick="setup.animateExecute(0)">Execute</button>
      <</if>>
      <button onclick="setup.animateDelete(0)">Delete</button>
    </div>
  </div>
</div>


<!-- CARD 2 -->
<div class="retro-window" data-index="1">
  <<set _card = State.variables.pph.taskFeed[1]>>

  <div class="window-header">
    <span class="window-title">Task Ticket</span>
    <button class="close-button">✕</button>
  </div>

  <div class="window-body">
    <div class="card-meta">
      <<print _card.track + " – Step " + _card.step>>
    </div>

    <<if _card.title>>
      <div class="card-title"><<print _card.title>></div>
    <</if>>

    <<if _card.description>>
      <div class="card-desc"><<print _card.description>></div>
    <</if>>

    <<if _card.type === "pledge">>
      <em class="pledge-label">Visibility Pledge</em>
    <</if>>

    <div class="actions">
      <<if _card.type === "pledge">>
        <button onclick="setup.animatePledge(1)">Pledge</button>
      <<else>>
        <button onclick="setup.animateExecute(1)">Execute</button>
      <</if>>
      <button onclick="setup.animateDelete(1)">Delete</button>
    </div>
  </div>
</div>

 <!-- CARD 3 -->
<div class="retro-window" data-index="2">
  <<set _card = State.variables.pph.taskFeed[2]>>

  <div class="window-header">
    <span class="window-title">Task Ticket</span>
    <button class="close-button">✕</button>
  </div>

  <div class="window-body">
    <div class="card-meta">
      <<print _card.track + " – Step " + _card.step>>
    </div>

    <<if _card.title>>
      <div class="card-title"><<print _card.title>></div>
    <</if>>

    <<if _card.description>>
      <div class="card-desc"><<print _card.description>></div>
    <</if>>

    <<if _card.type === "pledge">>
      <em class="pledge-label">Visibility Pledge</em>
    <</if>>

    <div class="actions">
      <<if _card.type === "pledge">>
        <button onclick="setup.animatePledge(2)">Pledge</button>
      <<else>>
        <button onclick="setup.animateExecute(2)">Execute</button>
      <</if>>
      <button onclick="setup.animateDelete(2)">Delete</button>
    </div>
  </div>
</div>

<!-- CARD 4 -->
<div class="retro-window" data-index="3">
  <<set _card = State.variables.pph.taskFeed[3]>>

  <div class="window-header">
    <span class="window-title">Task Ticket</span>
    <button class="close-button">✕</button>
  </div>

  <div class="window-body">
    <div class="card-meta">
      <<print _card.track + " – Step " + _card.step>>
    </div>

    <<if _card.title>>
      <div class="card-title"><<print _card.title>></div>
    <</if>>

    <<if _card.description>>
      <div class="card-desc"><<print _card.description>></div>
    <</if>>

    <<if _card.type === "pledge">>
      <em class="pledge-label">Visibility Pledge</em>
    <</if>>

    <div class="actions">
      <<if _card.type === "pledge">>
        <button onclick="setup.animatePledge(3)">Pledge</button>
      <<else>>
        <button onclick="setup.animateExecute(3)">Execute</button>
      <</if>>
      <button onclick="setup.animateDelete(3)">Delete</button>
    </div>
  </div>
</div>


</div>
<</if>>
<</nobr>>

:: SoftFail {"position":"975,425","size":"100,100"}
<<run setup.calculateScore()>>
<h2>Productivity Power Hour Concluded</h2>

<<if _score > 0>>
  <p>You didn’t complete a full track, but you made meaningful progress. Partial completions have been logged.</p>
  <p>CoSy acknowledges your intermediate output with faint approval.</p>
<<else>>
  <p>No tracks were completed. CoSy notes a troubling lack of outcomes.</p>
  <p>Recommended remediation: Self-directed motivational reflection.</p>
<</if>>

<p>Final Productivity Score: <<print State.variables.pph.score>></p>

<<link "Try Again">>
  <<goto "PowerHourStart">>
<</link>>

:: HardFail {"position":"975,525","size":"100,100"}
<<run setup.calculateScore()>>
<h2>Burnout Reached!</h2>
<<if $pph.score > 0>>
Your burnout metrics hit critical levels, but HQ noticed your productivity streak.  

You’ll get a fast-track decompression break and a shiny commendation for the effort!
<<else>>
Burnout at critical levels. Please report to HR immediately for a full decompression workshop.
<</if>>

Productivity Score: <<print $pph.score>>


:: Win {"position":"975,325","size":"100,100"}
<<run setup.calculateScore()>>
Congrats, you won with a score of <<print State.variables.pph.score>>!
